{"version":3,"file":"index.umd.js","sources":["../index.ts"],"sourcesContent":["import {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nexport type TOptions = {\n  maxFontSize?: number;\n  minFontSize?: number;\n  resolution?: number;\n};\n\n// suppress useLayoutEffect warning when rendering on the server\n// https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsoLayoutEffect =\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n    ? useLayoutEffect\n    : useEffect;\n\nconst useFitText = ({\n  maxFontSize = 100,\n  minFontSize = 20,\n  resolution = 5,\n}: TOptions = {}) => {\n  const initState = useCallback(\n    () => ({\n      fontSize: maxFontSize,\n      fontSizePrev: minFontSize,\n      fontSizeMax: maxFontSize,\n      fontSizeMin: minFontSize,\n    }),\n    [maxFontSize, minFontSize],\n  );\n\n  const ref = useRef<HTMLDivElement>(null);\n  const [state, setState] = useState(initState);\n  const { fontSize, fontSizeMax, fontSizeMin, fontSizePrev } = state;\n\n  // montior div size changes and recalculate on resize\n  let animationFrameId: number | null = null;\n  const [ro] = useState(\n    () =>\n      new ResizeObserver(() => {\n        animationFrameId = window.requestAnimationFrame(() => {\n          setState(initState());\n        });\n      }),\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      ro.observe(ref.current);\n    }\n    return () => {\n      animationFrameId && window.cancelAnimationFrame(animationFrameId);\n      ro.disconnect();\n    };\n  }, [animationFrameId, ro]);\n\n  // check overflow and resize font\n  useIsoLayoutEffect(() => {\n    const isDone = Math.abs(fontSize - fontSizePrev) <= resolution;\n    const isOverflow =\n      !!ref.current &&\n      (ref.current.scrollHeight > ref.current.offsetHeight ||\n        ref.current.scrollWidth > ref.current.offsetWidth);\n    const isAsc = fontSize > fontSizePrev;\n\n    // return if the font size has been adjusted \"enough\" (change within `resolution`)\n    // reduce font size by one increment if it's overflowing\n    if (isDone) {\n      if (isOverflow) {\n        const fontSizeNew =\n          fontSizePrev < fontSize\n            ? fontSizePrev\n            : fontSize - (fontSizePrev - fontSize);\n        setState({\n          fontSize: fontSizeNew,\n          fontSizeMax,\n          fontSizeMin,\n          fontSizePrev,\n        });\n      }\n      return;\n    }\n\n    // binary search to adjust font size\n    let delta: number;\n    let newMax = fontSizeMax;\n    let newMin = fontSizeMin;\n    if (isOverflow) {\n      delta = isAsc ? fontSizePrev - fontSize : fontSizeMin - fontSize;\n      newMax = Math.min(fontSizeMax, fontSize);\n    } else {\n      delta = isAsc ? fontSizeMax - fontSize : fontSizePrev - fontSize;\n      newMin = Math.max(fontSizeMin, fontSize);\n    }\n    setState({\n      fontSize: fontSize + delta / 2,\n      fontSizeMax: newMax,\n      fontSizeMin: newMin,\n      fontSizePrev: fontSize,\n    });\n  }, [fontSize, fontSizeMax, fontSizeMin, fontSizePrev, ref, resolution]);\n\n  return { fontSize: `${fontSize}%`, ref };\n};\n\nexport default useFitText;\n"],"names":["const","useIsoLayoutEffect","window","document","createElement","useLayoutEffect","useEffect","ref$1","initState","useCallback","fontSize","maxFontSize","fontSizePrev","minFontSize","fontSizeMax","fontSizeMin","ref","useRef","useState","animationFrameId","ResizeObserver","requestAnimationFrame","setState","current","ro","observe","cancelAnimationFrame","disconnect","isDone","Math","abs","resolution","isOverflow","scrollHeight","offsetHeight","scrollWidth","offsetWidth","isAsc","delta","newMax","newMin","min","max"],"mappings":"0UAiBAA,IAAMC,EACc,oBAAXC,QACPA,OAAOC,UACPD,OAAOC,SAASC,cACZC,kBACAC,4BAEcC,kBAIN,uCAHE,wCACA,sCACD,OAEPC,EAAYC,gCAEdC,SAAUC,EACVC,aAAcC,EACdC,YAAaH,EACbI,YAAaF,IAEf,CAACF,EAAaE,IAGVG,EAAMC,SAAuB,QACTC,WAASV,+EAI/BW,EAAkC,OACzBD,6BAET,IAAIE,aACFD,EAAmBjB,OAAOmB,iCACxBC,EAASd,qBAKjBF,8BACMU,EAAIO,SACNC,EAAGC,QAAQT,EAAIO,oBAGfJ,GAAoBjB,OAAOwB,qBAAqBP,GAChDK,EAAGG,eAEJ,CAACR,EAAkBK,IAGtBvB,iBACQ2B,EAASC,KAAKC,IAAIpB,EAAWE,IAAiBmB,EAC9CC,IACFhB,EAAIO,UACLP,EAAIO,QAAQU,aAAejB,EAAIO,QAAQW,cACtClB,EAAIO,QAAQY,YAAcnB,EAAIO,QAAQa,aACpCC,EAAQ3B,EAAWE,KAIrBgB,EACEI,GAKFV,EAAS,CACPZ,SAJAE,EAAeF,EACXE,EACAF,GAAYE,EAAeF,eAG/BI,cACAC,eACAH,aAOF0B,EACAC,EAASzB,EACT0B,EAASzB,EACTiB,GACFM,EAAQD,EAAQzB,EAAeF,EAAWK,EAAcL,EACxD6B,EAASV,KAAKY,IAAI3B,EAAaJ,KAE/B4B,EAAQD,EAAQvB,EAAcJ,EAAWE,EAAeF,EACxD8B,EAASX,KAAKa,IAAI3B,EAAaL,IAEjCY,EAAS,CACPZ,SAAUA,EAAW4B,EAAQ,EAC7BxB,YAAayB,EACbxB,YAAayB,EACb5B,aAAcF,MAEf,CAACA,EAAUI,EAAaC,EAAaH,EAAcI,EAAKe,IAEpD,CAAErB,SAAaA,UAAaM"}