{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js\";\nimport React from 'react';\nimport { Button, TextField, Divider, Box, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton } from '@material-ui/core';\nimport Send from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.socket = props.socket;\n    this.messages = this.formatMessages(props.messages);\n    this.me = props.me;\n    this.state = {\n      messages: this.messages,\n      sendMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    this.socket.emit(\"userSync\", this.me.name);\n    this.socket.on(\"messagesUpdated\", messages => {\n      this.messages = this.formatMessages(messages);\n      this.setState((state, props) => ({\n        messages: this.messages\n      }));\n    });\n  }\n\n  formatMessages(messages) {\n    let newMessages = new Array();\n\n    for (let message in messages) {\n      if (newMessages.length == 0 || message.senderName != newMessages[-1].senderName) newMessages.push({\n        lines: [message.message],\n        senderName: message.senderName,\n        serverMessage: message.serverMessage\n      });else newMessages[-1].lines.push(message.message);\n    }\n  }\n\n  messageChanged(e) {\n    this.setState((state, props) => ({\n      sendMessage: e.value\n    }));\n  }\n\n  handleSend() {\n    this.socket.emit(\"sendMessage\", this.state.sendMessage);\n    this.setState((state, props) => ({\n      sendMessage: ''\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, this.state.messages.map(this.renderItem)), /*#__PURE__*/React.createElement(TextField, {\n      placeholder: \"Send a message...\",\n      variant: \"outlined\",\n      value: this.state.sendMessage,\n      onChange: e => this.messageChanged(e),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => this.handleSend(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Send, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  renderItem(sItem, sIndex) {\n    const senderName = sItem.senderName === this.me.name ? \"You\" : sItem.senderName;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: `section-${sIndex}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, senderName), this.state.messages.lines.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n      key: `item-${sIndex}-${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js"],"names":["React","Button","TextField","Divider","Box","List","ListItem","ListSubheader","ListItemText","InputAdornment","IconButton","Send","Chat","Component","constructor","props","socket","messages","formatMessages","me","state","sendMessage","componentDidMount","emit","name","on","setState","newMessages","Array","message","length","senderName","push","lines","serverMessage","messageChanged","e","value","handleSend","render","map","renderItem","sItem","sIndex","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField, Divider, Box, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton } from '@material-ui/core';\nimport Send from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tthis.messages = this.formatMessages(props.messages);\n\t\tthis.me = props.me;\n\n\t\tthis.state = {messages: this.messages, sendMessage: ''};\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.socket.emit(\"userSync\", this.me.name);\n\n\t\tthis.socket.on(\"messagesUpdated\", messages => {\n\t\t\tthis.messages = this.formatMessages(messages);\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tmessages: this.messages\n\t\t\t}));\n\t\t});\n\t}\n\n\tformatMessages(messages){\n\t\tlet newMessages = new Array();\n\t\tfor (let message in messages){\n\t\t\tif (newMessages.length == 0 || message.senderName != newMessages[-1].senderName)\n\t\t\t\tnewMessages.push({lines: [message.message], senderName: message.senderName, serverMessage: message.serverMessage})\n\t\t\telse\n\t\t\t\tnewMessages[-1].lines.push(message.message);\n\t\t}\n\t}\n\n\tmessageChanged(e){\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: e.value\n\t\t}));\n\t}\n\n\thandleSend(){\n\t\tthis.socket.emit(\"sendMessage\", this.state.sendMessage);\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: ''\n\t\t}));\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t<List component=\"nav\">{this.state.messages.map(this.renderItem)}</List>\n\t\t\t\t<TextField placeholder=\"Send a message...\" variant=\"outlined\" value={this.state.sendMessage} onChange={e => this.messageChanged(e)} endAdornment={\n\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t<IconButton onClick={() => this.handleSend()}>\n\t\t\t\t\t\t\t<Send/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t}/>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\trenderItem(sItem, sIndex){\n\t\tconst senderName = (sItem.senderName === this.me.name ? \"You\" : sItem.senderName);\n\t\treturn (\n\t\t\t<li key={`section-${sIndex}`}>\n\t\t\t\t<ul>\n\t\t\t\t\t<ListSubheader>{senderName}</ListSubheader>\n\t\t\t\t\t{this.state.messages.lines.map((item, index) => (\n\t\t\t\t\t\t<ListItem key={`item-${sIndex}-${index}`}>\n\t\t\t\t\t\t\t<ListItemText primary={item}/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<Divider/>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}