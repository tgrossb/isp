{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/isp/isp/src/Client.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, TextField, Divider, Card, CardContent, Box, Grid, List, ListItemText, IconButton } from '@material-ui/core';\nimport { red, yellow, lightGreen, blue } from '@material-ui/core/colors';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Chat from './Chat.js';\n\nclass Client extends React.Component {\n  constructor(props) {\n    super(props);\n    this.socket = props.socket;\n    this.game = props.game;\n    this.me = props.me;\n    this.board = [];\n\n    for (let r = 0; r < 10; r++) {\n      let row = [];\n\n      for (let c = 0; c < 11; c++) row.push('transparent');\n\n      this.board.push(row);\n    }\n\n    let pos = {\n      x: 0,\n      y: 9\n    };\n    let colors = [blue[400], lightGreen[700], red[500], yellow[500]];\n\n    for (let count = 5; count > 1; count--) for (let color = 0; color < 4; color++) for (let c = 0; c < count; c++) {\n      this.board[pos.y][pos.x] = colors[color];\n      pos = this.getNextPos(pos);\n    }\n\n    console.log(\"board done\");\n  }\n\n  componentDidMount() {}\n\n  getNextPos(pos) {\n    let vector = this.getNextPosVector(pos);\n    return {\n      x: pos.x + vector.x,\n      y: pos.y + vector.y\n    };\n  }\n\n  getNextPosVector(pos) {\n    let {\n      x,\n      y\n    } = pos;\n    let down = {\n      x: 0,\n      y: 1\n    };\n    let up = {\n      x: 0,\n      y: -1\n    };\n    let right = {\n      x: 1,\n      y: 0\n    };\n    let left = {\n      x: -1,\n      y: 0\n    };\n    if (x === 0 && y === 0 || x === 2 && y === 2) return right;\n    if (x === 10 && y === 0 || x === 7 && y === 2) return down;\n    if (x === 10 && y === 9 || x === 7 && y === 6) return left;\n    if (x === 2 && y === 9 || x === 4 && y === 6) return up;\n    if (x === 0) return up;\n    if (y === 0) return right;\n    if (x === 10) return down;\n    if (y === 9) return left;\n    if (x === 2) return up;\n    if (y === 2) return right;\n    if (x === 7) return down;\n    if (y === 6) return left;\n    console.log(\"Unhandled \", pos);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        minHeight: '100vh'\n      },\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        width: '80%'\n      },\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, [...Array(10).keys()].map(row => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      key: \"row.\" + row,\n      justify: \"center\",\n      alignItems: \"center\",\n      style: {\n        height: '5vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, [...Array(11).keys()].map(col => {\n      let color = this.board[row][col];\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: \"row.\" + row + \".col.\" + col,\n        style: {\n          width: '5vh',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        border: color === 'transparent' ? 0 : 1,\n        borderColor: \"black.100\",\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        bgcolor: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }\n      }));\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      socket: this.socket,\n      messages: this.game.messages,\n      me: this.me,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Client;","map":{"version":3,"sources":["/home/theo/computerScience/js/isp/isp/src/Client.js"],"names":["React","Redirect","Button","TextField","Divider","Card","CardContent","Box","Grid","List","ListItemText","IconButton","red","yellow","lightGreen","blue","ArrowBackIcon","Chat","Client","Component","constructor","props","socket","game","me","board","r","row","c","push","pos","x","y","colors","count","color","getNextPos","console","log","componentDidMount","vector","getNextPosVector","down","up","right","left","render","minHeight","width","Array","keys","map","height","col","messages"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, TextField, Divider, Card, CardContent, Box, Grid, List, ListItemText, IconButton } from '@material-ui/core';\nimport { red, yellow, lightGreen, blue } from '@material-ui/core/colors';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Chat from './Chat.js';\n\nclass Client extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tthis.game = props.game;\n\t\tthis.me = props.me;\n\n\t\tthis.board = []\n\t\tfor (let r=0; r<10; r++){\n\t\t\tlet row = [];\n\t\t\tfor (let c=0; c<11; c++)\n\t\t\t\trow.push('transparent');\n\t\t\tthis.board.push(row);\n\t\t}\n\n\t\tlet pos = {x: 0, y: 9};\n\t\tlet colors = [blue[400], lightGreen[700], red[500], yellow[500]];\n\t\tfor (let count = 5; count > 1; count--)\n\t\t\tfor (let color = 0; color < 4; color++)\n\t\t\t\tfor (let c=0; c<count; c++){\n\t\t\t\t\tthis.board[pos.y][pos.x] = colors[color];\n\t\t\t\t\tpos = this.getNextPos(pos);\n\t\t\t\t}\n\t\tconsole.log(\"board done\");\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\tgetNextPos(pos){\n\t\tlet vector = this.getNextPosVector(pos);\n\t\treturn {x: pos.x + vector.x, y: pos.y + vector.y};\n\t}\n\n\tgetNextPosVector(pos){\n\t\tlet {x, y} = pos;\n\t\tlet down = {x: 0, y: 1};\n\t\tlet up = {x: 0, y: -1};\n\t\tlet right = {x: 1, y: 0};\n\t\tlet left = {x: -1, y: 0};\n\t\tif ((x === 0 && y === 0) || (x === 2 && y === 2))\n\t\t\treturn right;\n\t\tif ((x === 10 && y === 0) || (x === 7 && y === 2))\n\t\t\treturn down;\n\t\tif ((x === 10 && y === 9) || (x === 7 && y === 6))\n\t\t\treturn left;\n\t\tif ((x === 2 && y === 9) || (x === 4 && y === 6))\n\t\t\treturn up;\n\n\t\tif (x === 0) return up;\n\t\tif (y === 0) return right;\n\t\tif (x === 10) return down;\n\t\tif (y === 9) return left;\n\t\tif (x === 2) return up;\n\t\tif (y === 2) return right;\n\t\tif (x === 7) return down;\n\t\tif (y === 6) return left;\n\n\t\tconsole.log(\"Unhandled \", pos);\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Grid container style={{minHeight: '100vh'}} direction='row' justify='center' alignItems='center'>\n\t\t\t\t<Grid item style={{width: '80%'}} align='center'>\n\t\t\t\t\t{[...Array(10).keys()].map(row => (\n\t\t\t\t\t\t<Grid container direction='row' key={\"row.\" + row} justify='center' alignItems='center' style={{height: '5vh'}}>\n\t\t\t\t\t\t\t{[...Array(11).keys()].map(col => {\n\t\t\t\t\t\t\t\tlet color = this.board[row][col];\n\t\t\t\t\t\t\t\treturn <Grid item key={\"row.\" + row + \".col.\" + col} style={{width: '5vh', height: '100%'}}>\n\t\t\t\t\t\t\t\t\t<Box border={(color === 'transparent') ? 0 : 1} borderColor='black.100' style={{width: '100%', height: '100%'}} bgcolor={color}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item style={{width: '20%'}}>\n\t\t\t\t\t<Chat socket={this.socket} messages={this.game.messages} me={this.me}/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}