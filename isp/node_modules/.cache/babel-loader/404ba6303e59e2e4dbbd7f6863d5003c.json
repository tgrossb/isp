{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Box, TextField, Divider, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst styles = theme => ({\n  listRoot: {\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.messageChanged = e => {\n      e.persist();\n      this.setState((state, props) => ({\n        sendMessage: e.target.value\n      }));\n    };\n\n    this.handleSend = () => {\n      console.log(\"sending message\", this.state.sendMessage);\n      this.socket.emit(\"sendMessage\", this.state.sendMessage);\n      this.setState((state, props) => ({\n        sendMessage: ''\n      }));\n    };\n\n    this.renderItem = (sItem, sIndex) => {\n      const senderName = sItem.senderName === this.me.name ? \"You\" : sItem.senderName;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `section-${sIndex}`,\n        style: {\n          backgroundColor: 'inherit'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          padding: \"0\",\n          backgroundColor: 'inherit'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ListSubheader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }\n      }, senderName), sItem.lines.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n        key: `item-${sIndex}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 8\n        }\n      }))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }\n      })));\n    };\n\n    this.socket = props.socket;\n    console.log(props.messages);\n    this.messages = this.formatMessages(props.messages);\n    this.me = props.me;\n    this.state = {\n      messages: this.messages,\n      sendMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    this.socket.emit(\"userSync\", this.me.name);\n    this.socket.on(\"messagesUpdated\", messages => {\n      this.messages = this.formatMessages(messages);\n      this.setState((state, props) => ({\n        messages: this.messages\n      }));\n    });\n  }\n\n  formatMessages(messages) {\n    let newMessages = new Array();\n\n    for (let message of messages) {\n      console.log(message);\n      if (newMessages.length === 0 || message.senderName != newMessages[newMessages.length - 1].senderName) newMessages.push({\n        lines: [message.message],\n        senderName: message.senderName,\n        serverMessage: message.serverMessage\n      });else newMessages[newMessages.length - 1].lines.push(message.message);\n    }\n\n    return newMessages;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      style: {\n        maxHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      style: {\n        height: \"calc(100vh - 72px)\",\n        overflow: 'auto'\n      },\n      className: classes.listRoot,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }, this.state.messages.map(this.renderItem))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      pt: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        width: 'calc(20vw - 32px)'\n      },\n      placeholder: \"Send a message...\",\n      variant: \"outlined\",\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          onClick: this.handleSend,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(SendIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        })))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 6\n      }\n    }))));\n  }\n\n}\n\nChat.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Chat);","map":{"version":3,"sources":["/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js"],"names":["React","PropTypes","Grid","Box","TextField","Divider","List","ListItem","ListSubheader","ListItemText","InputAdornment","IconButton","Paper","withStyles","SendIcon","styles","theme","listRoot","backgroundColor","palette","background","paper","Chat","Component","constructor","props","messageChanged","e","persist","setState","state","sendMessage","target","value","handleSend","console","log","socket","emit","renderItem","sItem","sIndex","senderName","me","name","padding","lines","map","item","index","messages","formatMessages","componentDidMount","on","newMessages","Array","message","length","push","serverMessage","render","classes","maxHeight","height","overflow","width","endAdornment","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Grid, Box, TextField, Divider, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst styles = theme => ({\n\tlistRoot: {\n\t\tbackgroundColor: theme.palette.background.paper\n\t}\n});\n\n\nclass Chat extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tconsole.log(props.messages);\n\t\tthis.messages = this.formatMessages(props.messages);\n\t\tthis.me = props.me;\n\n\t\tthis.state = {messages: this.messages, sendMessage: ''};\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.socket.emit(\"userSync\", this.me.name);\n\n\t\tthis.socket.on(\"messagesUpdated\", messages => {\n\t\t\tthis.messages = this.formatMessages(messages);\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tmessages: this.messages\n\t\t\t}));\n\t\t});\n\t}\n\n\tformatMessages(messages){\n\t\tlet newMessages = new Array();\n\t\tfor (let message of messages){\n\t\t\tconsole.log(message);\n\t\t\tif (newMessages.length === 0 || (message.senderName != newMessages[newMessages.length-1].senderName))\n\t\t\t\tnewMessages.push({lines: [message.message], senderName: message.senderName, serverMessage: message.serverMessage})\n\t\t\telse\n\t\t\t\tnewMessages[newMessages.length-1].lines.push(message.message);\n\t\t}\n\t\treturn newMessages;\n\t}\n\n\tmessageChanged = (e) => {\n\t\te.persist();\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: e.target.value\n\t\t}));\n\t}\n\n\thandleSend = () => {\n\t\tconsole.log(\"sending message\", this.state.sendMessage);\n\t\tthis.socket.emit(\"sendMessage\", this.state.sendMessage);\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: ''\n\t\t}));\n\t}\n\n\trender(){\n\t\tconst {classes} = this.props;\n\t\treturn (\n\t\t\t<Grid container direction='column' justify='space-between' style={{maxHeight: \"100vh\"}}>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<List dense style={{height: \"calc(100vh - 72px)\", overflow: 'auto'}} className={classes.listRoot}>{this.state.messages.map(this.renderItem)}</List>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item><Box p={2} pt={0}>\n\t\t\t\t\t<TextField style={{width: 'calc(20vw - 32px)'}} placeholder=\"Send a message...\" variant=\"outlined\" InputProps={{\n\t\t\t\t\t\tendAdornment: <InputAdornment position='end'>\n\t\t\t\t\t\t\t\t<IconButton onClick={this.handleSend}>\n\t\t\t\t\t\t\t\t<SendIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t}}/>\n\t\t\t\t</Box></Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\trenderItem = (sItem, sIndex) => {\n\t\tconst senderName = (sItem.senderName === this.me.name ? \"You\" : sItem.senderName);\n\t\treturn (\n\t\t\t<li key={`section-${sIndex}`} style={{backgroundColor: 'inherit'}}>\n\t\t\t\t<ul style={{padding: \"0\", backgroundColor: 'inherit'}}>\n\t\t\t\t\t<ListSubheader>{senderName}</ListSubheader>\n\t\t\t\t\t{sItem.lines.map((item, index) => (\n\t\t\t\t\t\t<ListItem key={`item-${sIndex}-${index}`}>\n\t\t\t\t\t\t\t<ListItemText primary={item}/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<Divider/>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nChat.propTypes = {\n\tclasses: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Chat);\n"]},"metadata":{},"sourceType":"module"}