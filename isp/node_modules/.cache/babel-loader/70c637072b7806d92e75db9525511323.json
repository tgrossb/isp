{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js\";\nimport React from 'react';\nimport { FormControl, Grid, Box, TextField, Divider, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton, Paper } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSend = e => {\n      e.preventDefault(); // Takes some manipulation because of material ui\n\n      const value = this.messageInput.current.firstChild.firstChild.value;\n      this.socket.emit(\"sendMessage\", value);\n    };\n\n    this.renderItem = (sItem, sIndex) => {\n      const senderName = sItem.senderName === this.me.name ? \"You\" : sItem.senderName;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `section-${sIndex}`,\n        style: {\n          backgroundColor: 'inherit'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        style: {\n          padding: \"0\",\n          backgroundColor: 'inherit'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ListSubheader, {\n        style: {\n          backgroundColor: 'rgb(250, 250, 250)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }\n      }, senderName), sItem.lines.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n        key: `item-${sIndex}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }\n      }))), sIndex != this.messages.length - 1 && /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 43\n        }\n      })));\n    };\n\n    this.socket = props.socket;\n    this.messages = this.formatMessages(props.messages);\n    this.me = props.me;\n    this.state = {\n      messages: this.messages\n    };\n    this.messageInput = React.createRef();\n  }\n\n  componentDidMount() {\n    this.socket.emit(\"userSync\", this.me.name);\n    this.socket.on(\"messagesUpdated\", messages => {\n      this.messages = this.formatMessages(messages);\n      this.setState((state, props) => ({\n        messages: this.messages\n      }));\n    });\n  }\n\n  formatMessages(messages) {\n    let newMessages = new Array();\n\n    for (let message of messages) {\n      if (newMessages.length === 0 || message.senderName != newMessages[newMessages.length - 1].senderName) newMessages.push({\n        lines: [message.message],\n        senderName: message.senderName,\n        serverMessage: message.serverMessage\n      });else newMessages[newMessages.length - 1].lines.push(message.message);\n    }\n\n    return newMessages;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"space-between\",\n      style: {\n        maxHeight: \"100vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column-reverse\",\n      style: {\n        height: \"calc(100vh - 72px)\",\n        overflow: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 124\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      dense: true,\n      style: {\n        backgroundColor: 'inherit'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }\n    }, this.state.messages.map(this.renderItem))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      pt: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        width: 'calc(20vw - 32px)'\n      },\n      placeholder: \"Send a message...\",\n      variant: \"outlined\",\n      ref: this.messageInput,\n      InputProps: {\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(SendIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        })))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }))))));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js"],"names":["React","FormControl","Grid","Box","TextField","Divider","List","ListItem","ListSubheader","ListItemText","InputAdornment","IconButton","Paper","SendIcon","Chat","Component","constructor","props","handleSend","e","preventDefault","value","messageInput","current","firstChild","socket","emit","renderItem","sItem","sIndex","senderName","me","name","backgroundColor","padding","lines","map","item","index","messages","length","formatMessages","state","createRef","componentDidMount","on","setState","newMessages","Array","message","push","serverMessage","render","classes","maxHeight","height","overflow","width","endAdornment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormControl, Grid, Box, TextField, Divider, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton, Paper } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tthis.messages = this.formatMessages(props.messages);\n\t\tthis.me = props.me;\n\n\t\tthis.state = {messages: this.messages};\n\t\tthis.messageInput = React.createRef();\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.socket.emit(\"userSync\", this.me.name);\n\n\t\tthis.socket.on(\"messagesUpdated\", messages => {\n\t\t\tthis.messages = this.formatMessages(messages);\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tmessages: this.messages\n\t\t\t}));\n\t\t});\n\t}\n\n\tformatMessages(messages){\n\t\tlet newMessages = new Array();\n\t\tfor (let message of messages){\n\t\t\tif (newMessages.length === 0 || (message.senderName != newMessages[newMessages.length-1].senderName))\n\t\t\t\tnewMessages.push({lines: [message.message], senderName: message.senderName, serverMessage: message.serverMessage})\n\t\t\telse\n\t\t\t\tnewMessages[newMessages.length-1].lines.push(message.message);\n\t\t}\n\t\treturn newMessages;\n\t}\n\n\thandleSend = (e) => {\n\t\te.preventDefault();\n\n\t\t// Takes some manipulation because of material ui\n\t\tconst value = this.messageInput.current.firstChild.firstChild.value;\n\t\tthis.socket.emit(\"sendMessage\", value);\n\t}\n\n\trender(){\n\t\tconst {classes} = this.props;\n\t\treturn (\n\t\t\t<Grid container direction='column' justify='space-between' style={{maxHeight: \"100vh\"}}>\n\t\t\t\t<Grid item><Box display='flex' flexDirection='column-reverse' style={{height: \"calc(100vh - 72px)\", overflow: 'auto'}}><Paper>\n\t\t\t\t\t<List dense style={{backgroundColor: 'inherit'}}>{this.state.messages.map(this.renderItem)}</List>\n\t\t\t\t</Paper></Box></Grid>\n\t\t\t\t<Grid item><Paper><Box p={2} pt={0}>\n\t\t\t\t\t<form onSubmit={this.handleSend}>\n\t\t\t\t\t<TextField style={{width: 'calc(20vw - 32px)'}} placeholder=\"Send a message...\" variant=\"outlined\" ref={this.messageInput} InputProps={{\n\t\t\t\t\t\tendAdornment: <InputAdornment position='end'>\n\t\t\t\t\t\t\t<IconButton type=\"submit\">\n\t\t\t\t\t\t\t\t<SendIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t}}/></form>\n\t\t\t\t</Box></Paper></Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\trenderItem = (sItem, sIndex) => {\n\t\tconst senderName = (sItem.senderName === this.me.name ? \"You\" : sItem.senderName);\n\t\treturn (\n\t\t\t<li key={`section-${sIndex}`} style={{backgroundColor: 'inherit'}}>\n\t\t\t\t<ul style={{padding: \"0\", backgroundColor: 'inherit'}}>\n\t\t\t\t\t<ListSubheader style={{backgroundColor: 'rgb(250, 250, 250)'}}>{senderName}</ListSubheader>\n\t\t\t\t\t{sItem.lines.map((item, index) => (\n\t\t\t\t\t\t<ListItem key={`item-${sIndex}-${index}`}>\n\t\t\t\t\t\t\t<ListItemText primary={item}/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t{sIndex != this.messages.length-1 && <Divider/>}\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}