{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js\";\nimport React from 'react';\nimport { Button, TextField, Divider, Box, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.messageChanged = e => {\n      this.setState((state, props) => ({\n        sendMessage: e.value\n      }));\n    };\n\n    this.handleSend = () => {\n      this.socket.emit(\"sendMessage\", this.state.sendMessage);\n      this.setState((state, props) => ({\n        sendMessage: ''\n      }));\n    };\n\n    this.renderItem = (sItem, sIndex) => {\n      const senderName = sItem.senderName === this.me.name ? \"You\" : sItem.senderName;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: `section-${sIndex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(ListSubheader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }\n      }, senderName), this.state.messages.lines.map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n        key: `item-${sIndex}-${index}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ListItemText, {\n        primary: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 8\n        }\n      }))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }\n      })));\n    };\n\n    this.socket = props.socket;\n    this.messages = this.formatMessages(props.messages);\n    this.me = props.me;\n    this.state = {\n      messages: this.messages,\n      sendMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    this.socket.emit(\"userSync\", this.me.name);\n    this.socket.on(\"messagesUpdated\", messages => {\n      this.messages = this.formatMessages(messages);\n      this.setState((state, props) => ({\n        messages: this.messages\n      }));\n    });\n  }\n\n  formatMessages(messages) {\n    let newMessages = new Array();\n\n    for (let message in messages) {\n      if (newMessages.length == 0 || message.senderName != newMessages[-1].senderName) newMessages.push({\n        lines: [message.message],\n        senderName: message.senderName,\n        serverMessage: message.serverMessage\n      });else newMessages[-1].lines.push(message.message);\n    }\n\n    return newMessages;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      component: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, this.state.messages.map(this.renderItem)), /*#__PURE__*/React.createElement(TextField, {\n      placeholder: \"Send a message...\",\n      variant: \"outlined\",\n      value: this.state.sendMessage,\n      onChange: this.messageChanged,\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.handleSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SendIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 8\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/theo/computerScience/js/shanghai/shanghai/src/Chat.js"],"names":["React","Button","TextField","Divider","Box","List","ListItem","ListSubheader","ListItemText","InputAdornment","IconButton","SendIcon","Chat","Component","constructor","props","messageChanged","e","setState","state","sendMessage","value","handleSend","socket","emit","renderItem","sItem","sIndex","senderName","me","name","messages","lines","map","item","index","formatMessages","componentDidMount","on","newMessages","Array","message","length","push","serverMessage","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, TextField, Divider, Box, List, ListItem, ListSubheader, ListItemText, InputAdornment, IconButton } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nclass Chat extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tthis.messages = this.formatMessages(props.messages);\n\t\tthis.me = props.me;\n\n\t\tthis.state = {messages: this.messages, sendMessage: ''};\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.socket.emit(\"userSync\", this.me.name);\n\n\t\tthis.socket.on(\"messagesUpdated\", messages => {\n\t\t\tthis.messages = this.formatMessages(messages);\n\t\t\tthis.setState((state, props) => ({\n\t\t\t\tmessages: this.messages\n\t\t\t}));\n\t\t});\n\t}\n\n\tformatMessages(messages){\n\t\tlet newMessages = new Array();\n\t\tfor (let message in messages){\n\t\t\tif (newMessages.length == 0 || message.senderName != newMessages[-1].senderName)\n\t\t\t\tnewMessages.push({lines: [message.message], senderName: message.senderName, serverMessage: message.serverMessage})\n\t\t\telse\n\t\t\t\tnewMessages[-1].lines.push(message.message);\n\t\t}\n\t\treturn newMessages;\n\t}\n\n\tmessageChanged = (e) => {\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: e.value\n\t\t}));\n\t}\n\n\thandleSend = () => {\n\t\tthis.socket.emit(\"sendMessage\", this.state.sendMessage);\n\t\tthis.setState((state, props) => ({\n\t\t\tsendMessage: ''\n\t\t}));\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Box display='flex' flexDirection='column'>\n\t\t\t\t<List component=\"nav\">{this.state.messages.map(this.renderItem)}</List>\n\t\t\t\t<TextField placeholder=\"Send a message...\" variant=\"outlined\" value={this.state.sendMessage} onChange={this.messageChanged} endAdornment={\n\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t<IconButton onClick={this.handleSend}>\n\t\t\t\t\t\t\t<SendIcon/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t}/>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\trenderItem = (sItem, sIndex) => {\n\t\tconst senderName = (sItem.senderName === this.me.name ? \"You\" : sItem.senderName);\n\t\treturn (\n\t\t\t<li key={`section-${sIndex}`}>\n\t\t\t\t<ul>\n\t\t\t\t\t<ListSubheader>{senderName}</ListSubheader>\n\t\t\t\t\t{this.state.messages.lines.map((item, index) => (\n\t\t\t\t\t\t<ListItem key={`item-${sIndex}-${index}`}>\n\t\t\t\t\t\t\t<ListItemText primary={item}/>\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<Divider/>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}