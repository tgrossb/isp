{"ast":null,"code":"var _jsxFileName = \"/home/theo/computerScience/js/isp/isp/src/Client.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, TextField, Divider, Card, CardContent, Box, Grid, List, ListItemText, IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Chat from './Chat.js';\n\nclass Client extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.rowMap = row => {\n      console.log(row);\n      console.log(this.board[0]);\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        key: \"row.\" + row,\n        justify: \"center\",\n        alignItems: \"center\",\n        style: {\n          height: '5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 4\n        }\n      }, [...Array(11)].map((col, x) => this.colMap(row, col)));\n    };\n\n    this.colMap = (row, col) => {\n      console.log(this.board[row][col]);\n      return /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: \"row.\" + row + \".col.\" + col,\n        style: {\n          width: '5vh',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        border: 1,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        bgcolor: this.board[row][col],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    this.socket = props.socket;\n    this.game = props.game;\n    this.me = props.me;\n    this.board = [];\n\n    for (let r = 0; r < 10; r++) {\n      let row = [];\n\n      for (let c = 0; c < 11; c++) row.push('white');\n\n      this.board.push(row);\n    }\n\n    let pos = {\n      x: 0,\n      y: 9\n    };\n    let colors = ['blue', 'green', 'red', 'yellow'];\n\n    for (let count = 5; count > 1; count--) for (let color = 0; color < 4; color++) for (let c = 0; c < count; c++) {\n      this.board[pos.y][pos.x] = colors[color];\n      pos = this.getNextPos(pos);\n    }\n\n    console.log(\"board done\");\n  }\n\n  componentDidMount() {}\n\n  getNextPos(pos) {\n    let {\n      x,\n      y\n    } = pos;\n    let down = {\n      x: x,\n      y: y + 1\n    };\n    let up = {\n      x: x,\n      y: y - 1\n    };\n    let right = {\n      x: x + 1,\n      y: y\n    };\n    let left = {\n      x: x - 1,\n      y: y\n    };\n    if (x === 0 && y === 0 || x === 2 && y === 2) return right;\n    if (x === 10 && y === 0 || x === 7 && y === 2) return down;\n    if (x === 10 && y === 9 || x === 7 && y === 6) return left;\n    if (x === 2 && y === 9 || x === 4 && y === 6) return up;\n    if (x === 0) return up;\n    if (y === 0) return right;\n    if (x === 10) return down;\n    if (y === 9) return left;\n    if (x === 2) return up;\n    if (y === 2) return right;\n    if (x === 7) return down;\n    if (y === 6) return left;\n    console.log(\"Unhandled \", pos);\n  }\n\n  render() {\n    console.log(this.board);\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        minHeight: '100vh'\n      },\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        width: '80%'\n      },\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, [...Array(10)].map(this.rowMap)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        width: '20%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Chat, {\n      socket: this.socket,\n      messages: this.game.messages,\n      me: this.me,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nexport default Client;","map":{"version":3,"sources":["/home/theo/computerScience/js/isp/isp/src/Client.js"],"names":["React","Redirect","Button","TextField","Divider","Card","CardContent","Box","Grid","List","ListItemText","IconButton","ArrowBackIcon","Chat","Client","Component","constructor","props","rowMap","row","console","log","board","height","Array","map","col","x","colMap","width","socket","game","me","r","c","push","pos","y","colors","count","color","getNextPos","componentDidMount","down","up","right","left","render","minHeight","messages"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, TextField, Divider, Card, CardContent, Box, Grid, List, ListItemText, IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport Chat from './Chat.js';\n\nclass Client extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.socket = props.socket;\n\t\tthis.game = props.game;\n\t\tthis.me = props.me;\n\n\t\tthis.board = []\n\t\tfor (let r=0; r<10; r++){\n\t\t\tlet row = [];\n\t\t\tfor (let c=0; c<11; c++)\n\t\t\t\trow.push('white');\n\t\t\tthis.board.push(row);\n\t\t}\n\n\t\tlet pos = {x: 0, y: 9};\n\t\tlet colors = ['blue', 'green', 'red', 'yellow'];\n\t\tfor (let count = 5; count > 1; count--)\n\t\t\tfor (let color = 0; color < 4; color++)\n\t\t\t\tfor (let c=0; c<count; c++){\n\t\t\t\t\tthis.board[pos.y][pos.x] = colors[color];\n\t\t\t\t\tpos = this.getNextPos(pos);\n\t\t\t\t}\n\t\tconsole.log(\"board done\");\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\tgetNextPos(pos){\n\t\tlet {x, y} = pos;\n\t\tlet down = {x: x, y: y+1};\n\t\tlet up = {x: x, y: y-1};\n\t\tlet right = {x: x+1, y: y};\n\t\tlet left = {x: x-1, y: y};\n\t\tif ((x === 0 && y === 0) || (x === 2 && y === 2))\n\t\t\treturn right;\n\t\tif ((x === 10 && y === 0) || (x === 7 && y === 2))\n\t\t\treturn down;\n\t\tif ((x === 10 && y === 9) || (x === 7 && y === 6))\n\t\t\treturn left;\n\t\tif ((x === 2 && y === 9) || (x === 4 && y === 6))\n\t\t\treturn up;\n\n\t\tif (x === 0) return up;\n\t\tif (y === 0) return right;\n\t\tif (x === 10) return down;\n\t\tif (y === 9) return left;\n\t\tif (x === 2) return up;\n\t\tif (y === 2) return right;\n\t\tif (x === 7) return down;\n\t\tif (y === 6) return left;\n\n\t\tconsole.log(\"Unhandled \", pos);\n\t}\n\n\trender(){\n\t\tconsole.log(this.board);\n\t\treturn (\n\t\t\t<Grid container style={{minHeight: '100vh'}} direction='row' justify='center' alignItems='center'>\n\t\t\t\t<Grid item style={{width: '80%'}} align='center'>\n\t\t\t\t\t{[...Array(10)].map(this.rowMap)}\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item style={{width: '20%'}}>\n\t\t\t\t\t<Chat socket={this.socket} messages={this.game.messages} me={this.me}/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\trowMap = (row) => {\n\t\tconsole.log(row);\n\t\tconsole.log(this.board[0]);\n\t\treturn (\n\t\t\t<Grid container direction='row' key={\"row.\" + row} justify='center' alignItems='center' style={{height: '5vh'}}>\n\t\t\t\t{[...Array(11)].map((col, x) => this.colMap(row, col))}\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\tcolMap = (row, col) => {\n\t\tconsole.log(this.board[row][col]);\n\t\treturn (\n\t\t\t<Grid item key={\"row.\" + row + \".col.\" + col} style={{width: '5vh', height: '100%'}}>\n\t\t\t\t<Box border={1} style={{width: '100%', height: '100%'}} bgcolor={this.board[row][col]}/>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nexport default Client;\n"]},"metadata":{},"sourceType":"module"}